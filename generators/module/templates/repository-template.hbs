import { PrismaService } from '@/shared/services/prisma.service';
import { Injectable } from '@nestjs/common';
import { {{pascalCase name}}Entity } from '@/modules/{{ name }}/entities/{{name}}.entity';

@Injectable()
export class {{pascalCase name}}Repository {
  constructor(private readonly prisma: PrismaService) {}

  //async create(data: {{pascalCase name}}Entity): Promise<{{pascalCase name}}Entity> {
    //return await this.prisma.{{ name }}.create({ data });
  //}

  async update(id: string, data: {{pascalCase name}}Entity): Promise<{{pascalCase name}}Entity> {
    return await this.prisma.{{ name }}.update({
      data,
      where: {
        id: id
      }
    });
  }

  async delete(id: string): Promise<{{pascalCase name}}Entity> {
    return await this.prisma.{{ name }}.delete({
      where: {
        id: id
      }
    });
  }

  async get(id: string): Promise<{{pascalCase name}}Entity> {
    return await this.prisma.{{ name }}.findUnique({ where: { id: id } });
  }

  async getAll(): Promise<{{pascalCase name}}Entity[]> {
    return await this.prisma.{{ name }}.findMany();
  }
}
